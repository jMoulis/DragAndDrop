{"ast":null,"code":"var _jsxFileName = \"/Users/tiago/Desktop/encod/src/Components/DragAndDrop.js\";\nimport React, { Component, useCallback } from 'react';\nimport logo from '../logo.png';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useDropzone } from 'react-dropzone';\nvar title = {\n  fontSize: '15px',\n  fontWeight: 'bold'\n};\n\nfunction DragAndDropFunction(props) {\n  var _useDropzone = useDropzone({\n    accept: 'video/*, image/*'\n  }),\n      acceptedFiles = _useDropzone.acceptedFiles,\n      rejectedFiles = _useDropzone.rejectedFiles,\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var acceptedFilesItems = acceptedFiles.map(function (file) {\n    return React.createElement(\"li\", {\n      key: file.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, file.path, \" - \", file.size, \" bytes\");\n  });\n  var rejectedFilesItems = rejectedFiles.map(function (file) {\n    return React.createElement(\"li\", {\n      key: file.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, file.path, \" - \", file.size, \" bytes\");\n  });\n  return React.createElement(\"form\", {\n    action: \"/upload\",\n    enctype: \"multipart/form-data\",\n    method: \"POST\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"myFile\",\n    id: \"myFile\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\n\nexport default DragAndDropFunction;","map":{"version":3,"sources":["/Users/tiago/Desktop/encod/src/Components/DragAndDrop.js"],"names":["React","Component","useCallback","logo","useDropzone","title","fontSize","fontWeight","DragAndDropFunction","props","accept","acceptedFiles","rejectedFiles","getRootProps","getInputProps","acceptedFilesItems","map","file","path","size","rejectedFilesItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;AACA,OAAO,kCAAP;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAC,MADG;AAEZC,EAAAA,UAAU,EAAC;AAFC,CAAd;;AAMA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,qBACkCL,WAAW,CAAC;AAC9EM,IAAAA,MAAM,EAAE;AADsE,GAAD,CAD7C;AAAA,MAC3BC,aAD2B,gBAC3BA,aAD2B;AAAA,MACZC,aADY,gBACZA,aADY;AAAA,MACGC,YADH,gBACGA,YADH;AAAA,MACiBC,aADjB,gBACiBA,aADjB;;AAKlC,MAAMC,kBAAkB,GAAGJ,aAAa,CAACK,GAAd,CAAkB,UAAAC,IAAI;AAAA,WAC/C;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB,WAD+C;AAAA,GAAtB,CAA3B;AAMA,MAAMC,kBAAkB,GAAGR,aAAa,CAACI,GAAd,CAAkB,UAAAC,IAAI;AAAA,WAC/C;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB,WAD+C;AAAA,GAAtB,CAA3B;AAMA,SAEE;AAAM,IAAA,MAAM,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAC,qBAA/B;AAAqD,IAAA,MAAM,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,EAAE,EAAC,QAApC;AAA6C,IAAA,QAAQ,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF;AAQD;;AAAC,eAAeX,mBAAf","sourcesContent":["import React, { Component, useCallback } from 'react';\nimport logo from '../logo.png';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useDropzone} from 'react-dropzone';\n\nconst title = {\n  fontSize:'15px',\n  fontWeight:'bold',\n}\n\n\nfunction DragAndDropFunction(props) {\n  const {acceptedFiles, rejectedFiles, getRootProps, getInputProps} = useDropzone({\n    accept: 'video/*, image/*'\n  });\n\n  const acceptedFilesItems = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  const rejectedFilesItems = rejectedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n\n    <form action=\"/upload\" enctype=\"multipart/form-data\" method=\"POST\">\n      <input type=\"file\" name=\"myFile\" id=\"myFile\" required />\n      <input type=\"submit\" value=\"Upload\" />\n  </form>\n\n  );\n} export default DragAndDropFunction;\n"]},"metadata":{},"sourceType":"module"}