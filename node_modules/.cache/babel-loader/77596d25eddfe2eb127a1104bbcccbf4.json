{"ast":null,"code":"import _classCallCheck from \"/Users/tiago/Desktop/encod/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tiago/Desktop/encod/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tiago/Desktop/encod/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tiago/Desktop/encod/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tiago/Desktop/encod/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tiago/Desktop/encod/src/Components/DragAndDrop.js\";\nimport React, { Component } from 'react';\nimport logo from '../logo.png';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useDropzone } from 'react-dropzone';\n\nfunction Accept(props) {\n  var _useDropzone = useDropzone({\n    accept: 'image/jpeg, image/png'\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive,\n      isDragAccept = _useDropzone.isDragAccept,\n      isDragReject = _useDropzone.isDragReject;\n}\n\nvar acceptedFilesItems = acceptedFiles.map(function (file) {\n  return React.createElement(\"li\", {\n    key: file.path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, file.path, \" - \", file.size, \" bytes\");\n});\nvar rejectedFilesItems = rejectedFiles.map(function (file) {\n  return React.createElement(\"li\", {\n    key: file.path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, file.path, \" - \", file.size, \" bytes\");\n});\nReact.createElement(Accept, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n});\n\nvar DragAndDrop =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DragAndDrop, _Component);\n\n  function DragAndDrop() {\n    _classCallCheck(this, DragAndDrop);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DragAndDrop).apply(this, arguments));\n  }\n\n  _createClass(DragAndDrop, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", Object.assign({}, getRootProps({\n        className: \"dropzone\"\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), isDragAccept && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"All files will be accepted\"), isDragReject && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Some files will be rejected\"), !isDragActive && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Drop some files here ...\")));\n    }\n  }]);\n\n  return DragAndDrop;\n}(Component);\n\nexport default DragAndDrop;","map":{"version":3,"sources":["/Users/tiago/Desktop/encod/src/Components/DragAndDrop.js"],"names":["React","Component","logo","useDropzone","Accept","props","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFilesItems","acceptedFiles","map","file","path","size","rejectedFilesItems","rejectedFiles","DragAndDrop","className"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;AACA,OAAO,kCAAP;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,qBAOjBF,WAAW,CAAC;AACdG,IAAAA,MAAM,EAAE;AADM,GAAD,CAPM;AAAA,MAEnBC,YAFmB,gBAEnBA,YAFmB;AAAA,MAGnBC,aAHmB,gBAGnBA,aAHmB;AAAA,MAInBC,YAJmB,gBAInBA,YAJmB;AAAA,MAKnBC,YALmB,gBAKnBA,YALmB;AAAA,MAMnBC,YANmB,gBAMnBA,YANmB;AAWtB;;AAEC,IAAMC,kBAAkB,GAAGC,aAAa,CAACC,GAAd,CAAkB,UAAAC,IAAI;AAAA,SAC/C;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB,WAD+C;AAAA,CAAtB,CAA3B;AAMA,IAAMC,kBAAkB,GAAGC,aAAa,CAACL,GAAd,CAAkB,UAAAC,IAAI;AAAA,SAC/C;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB,WAD+C;AAAA,CAAtB,CAA3B;AAMF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;IACMG,W;;;;;;;;;;;;;6BACK;AACT,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6CAASb,YAAY,CAAC;AAACc,QAAAA,SAAS,EAAE;AAAZ,OAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,+CAAWb,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEGE,YAAY,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFpB,EAGKC,YAAY,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAHtB,EAIK,CAACF,YAAD,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJvB,CADF,CADF;AAUD;;;;EAZyBR,S;;AAgBxB,eAAemB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.png';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useDropzone} from 'react-dropzone';\n\n\nfunction Accept(props) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: 'image/jpeg, image/png'\n  });\n\n}\n\n  const acceptedFilesItems = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  const rejectedFilesItems = rejectedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n<Accept />\nclass DragAndDrop extends Component {\n  render() {\n  return (\n    <div className=\"container\">\n      <div {...getRootProps({className: \"dropzone\"})}>\n        <input {...getInputProps()} />\n        {isDragAccept && (<p>All files will be accepted</p>)}\n          {isDragReject && (<p>Some files will be rejected</p>)}\n          {!isDragActive && (<p>Drop some files here ...</p>)}\n      </div>\n    </div>\n  );\n}\n\n\n\n} export default DragAndDrop;\n"]},"metadata":{},"sourceType":"module"}